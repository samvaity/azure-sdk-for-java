// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.personalizer;

import com.azure.ai.personalizer.implementation.MultiSlotsImpl;
import com.azure.ai.personalizer.models.ErrorResponseException;
import com.azure.ai.personalizer.models.MultiSlotRankRequest;
import com.azure.ai.personalizer.models.MultiSlotRankResponse;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Initializes a new instance of the synchronous PersonalizerClient type. */
@ServiceClient(builder = PersonalizerClientBuilder.class)
public final class MultiSlotClient {
    private final MultiSlotsImpl serviceClient;

    /**
     * Initializes an instance of MultiSlots client.
     *
     * @param serviceClient the service client implementation.
     */
    MultiSlotClient(MultiSlotsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Submit a Personalizer multi-slot rank request. Receives a context, a list of actions, and a list of slots.
     * Returns which of the provided actions should be used in each slot, in each rewardActionId.
     *
     * @param body A Personalizer multi-slot Rank request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public MultiSlotRankResponse rank(MultiSlotRankRequest body) {
        return this.serviceClient.rank(body);
    }

    /**
     * Submit a Personalizer multi-slot rank request. Receives a context, a list of actions, and a list of slots.
     * Returns which of the provided actions should be used in each slot, in each rewardActionId.
     *
     * @param body A Personalizer multi-slot Rank request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<MultiSlotRankResponse> rankWithResponse(MultiSlotRankRequest body, Context context) {
        return this.serviceClient.rankWithResponse(body, context);
    }
}
