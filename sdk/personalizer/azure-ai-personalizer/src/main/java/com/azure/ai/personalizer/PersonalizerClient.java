// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.personalizer;

import com.azure.ai.personalizer.implementation.PersonalizerClientImpl;
import com.azure.ai.personalizer.models.ErrorResponseException;
import com.azure.ai.personalizer.models.RankRequest;
import com.azure.ai.personalizer.models.RankResponse;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Initializes a new instance of the synchronous PersonalizerClient type. */
@ServiceClient(builder = PersonalizerClientBuilder.class)
public final class PersonalizerClient {
    private final PersonalizerClientImpl serviceClient;

    /**
     * Initializes an instance of PersonalizerClient client.
     *
     * @param serviceClient the service client implementation.
     */
    PersonalizerClient(PersonalizerClientImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Submit a Personalizer rank request. Receives a context and a list of actions. Returns which of the provided
     * actions should be used by your application, in rewardActionId.
     *
     * @param rankRequest A Personalizer Rank request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return returns which action to use as rewardActionId, and additional information about each action as a result
     *     of a Rank request.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public RankResponse rank(RankRequest rankRequest) {
        return this.serviceClient.rank(rankRequest);
    }

    /**
     * Submit a Personalizer rank request. Receives a context and a list of actions. Returns which of the provided
     * actions should be used by your application, in rewardActionId.
     *
     * @param rankRequest A Personalizer Rank request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return returns which action to use as rewardActionId, and additional information about each action as a result
     *     of a Rank request.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<RankResponse> rankWithResponse(RankRequest rankRequest, Context context) {
        return this.serviceClient.rankWithResponse(rankRequest, context);
    }
}
